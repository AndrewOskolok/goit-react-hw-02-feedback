{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","percentGoodFeed","toFixed","className","styles","statistics","FeedbackOptions","addToGood","addToNeutral","addToBad","button","onClick","Section","title","children","section","Notification","message","notification","App","state","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,aAAe,qC,sLC4BlBC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAkBD,IACpBA,IAAqBE,UACrB,EACJ,OACE,oCACE,uBAAGC,UAAWC,IAAOC,YAArB,SAAwCT,GACxC,uBAAGO,UAAWC,IAAOC,YAArB,YAA2CR,GAC3C,uBAAGM,UAAWC,IAAOC,YAArB,QAAuCP,GACvC,uBAAGK,UAAWC,IAAOC,YAArB,UAAyCN,KACzC,uBAAGI,UAAWC,IAAOC,YAArB,sBACsBJ,EADtB,Q,gBCYSK,EAtBS,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAClD,OACE,oCACE,4BAAQN,UAAWC,IAAOM,OAAQC,QAASJ,GAA3C,QAGA,4BAAQJ,UAAWC,IAAOM,OAAQC,QAASH,GAA3C,WAGA,4BAAQL,UAAWC,IAAOM,OAAQC,QAASF,GAA3C,S,gBCMSG,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAASX,UAAWC,IAAOW,SACzB,wBAAIZ,UAAWC,IAAOS,OAAQA,GAC7BC,K,gBCGME,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,uBAAGd,UAAWC,IAAOc,cAAeD,ICgE9BE,E,4MA9DbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,UAAY,WACV,EAAKc,UAAS,SAACC,GAAD,MAAW,CACvB1B,KAAM0B,EAAK1B,Y,EAIfY,aAAe,WACb,EAAKa,UAAS,SAACC,GAAD,MAAW,CACvBzB,QAASyB,EAAKzB,e,EAIlBY,SAAW,WACT,EAAKY,UAAS,SAACC,GAAD,MAAW,CACvBxB,IAAKwB,EAAKxB,W,EAIdyB,mBAAqB,WACnB,OAAO,EAAKH,MAAMxB,KAAO,EAAKwB,MAAMvB,QAAU,EAAKuB,MAAMtB,K,EAG3D0B,gCAAkC,WAChC,OACqB,IAAlB,EAAKJ,MAAMxB,MACX,EAAKwB,MAAMxB,KAAO,EAAKwB,MAAMvB,QAAU,EAAKuB,MAAMtB,M,uDAIrD,OACE,oCACE,kBAAC,EAAD,CAASe,MAAM,yBACb,kBAAC,EAAD,CACEN,UAAWkB,KAAKlB,UAChBC,aAAciB,KAAKjB,aACnBC,SAAUgB,KAAKhB,YAGnB,kBAAC,EAAD,CAASI,MAAM,cACZY,KAAKF,qBACJ,kBAAC,EAAD,CACE3B,KAAM6B,KAAKL,MAAMxB,KACjBC,QAAS4B,KAAKL,MAAMvB,QACpBC,IAAK2B,KAAKL,MAAMtB,IAChBC,MAAO0B,KAAKF,mBACZvB,mBAAoByB,KAAKD,kCAG3B,kBAAC,EAAD,CAAcP,QAAQ,4B,GAvDhBS,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8cf40f6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1I9tC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__Ubdmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__EVDBM\",\"title\":\"Section_title__2B2gT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__13_wA\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const percentGoodFeed = positivePercentage()\r\n    ? positivePercentage().toFixed()\r\n    : 0;\r\n  return (\r\n    <>\r\n      <p className={styles.statistics}>Good: {good}</p>\r\n      <p className={styles.statistics}>Neutral: {neutral}</p>\r\n      <p className={styles.statistics}>Bad: {bad}</p>\r\n      <p className={styles.statistics}>Total: {total()}</p>\r\n      <p className={styles.statistics}>\r\n        Positive feedback: {percentGoodFeed} %\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ addToGood, addToNeutral, addToBad }) => {\r\n  return (\r\n    <>\r\n      <button className={styles.button} onClick={addToGood}>\r\n        Good\r\n      </button>\r\n      <button className={styles.button} onClick={addToNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button className={styles.button} onClick={addToBad}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  addToGood: PropTypes.func.isRequired,\r\n  addToNeutral: PropTypes.func.isRequired,\r\n  addToBad: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <section className={styles.section}>\r\n        <h3 className={styles.title}>{title}</h3>\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={styles.notification}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addToGood = () => {\n    this.setState((prev) => ({\n      good: prev.good++,\n    }));\n  };\n\n  addToNeutral = () => {\n    this.setState((prev) => ({\n      neutral: prev.neutral++,\n    }));\n  };\n\n  addToBad = () => {\n    this.setState((prev) => ({\n      bad: prev.bad++,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (\n      (this.state.good * 100) /\n      (this.state.good + this.state.neutral + this.state.bad)\n    );\n  };\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            addToGood={this.addToGood}\n            addToNeutral={this.addToNeutral}\n            addToBad={this.addToBad}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}